<Window x:Class="XStateNet.PerformanceMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="XStateNet Performance Monitor" Height="900" Width="1400"
        Background="#1E1E1E"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <Style TargetType="TextBlock" x:Key="TitleStyle">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="SubtitleStyle">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#00D9FF"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>

        <Style TargetType="Border" x:Key="ChartContainerStyle">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="10" ShadowDepth="3"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ModernButtonStyle">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="20,10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1C97EA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#555555"/>
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="#252526" Padding="20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="🚀 XStateNet Performance Monitor" Style="{StaticResource TitleStyle}"/>
                    <TextBlock Text="Real-time Benchmarking &amp; Visualization"
                               FontSize="14" Foreground="#CCCCCC"/>
                </StackPanel>

                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                    <Button Content="▶ Run Benchmarks"
                            Style="{StaticResource ModernButtonStyle}"
                            Click="RunBenchmarks_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Main Content -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Row 1: Throughput Comparison -->
                <Border Grid.Row="0" Style="{StaticResource ChartContainerStyle}">
                    <StackPanel>
                        <TextBlock Text="📊 Throughput Comparison" Style="{StaticResource SubtitleStyle}"/>
                        <TextBlock Text="Events per second (higher is better)"
                                   Foreground="#AAAAAA" FontSize="12" Margin="0,0,0,20"/>

                        <!-- Sequential -->
                        <Grid Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Sequential" Foreground="White" VerticalAlignment="Center"/>
                            <Border Grid.Column="1" Height="30" Background="#1E90FF" CornerRadius="3" Margin="5,0"/>
                            <TextBlock Grid.Column="2" Text="3,910 evt/s" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>

                        <!-- Parallel -->
                        <Grid Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Parallel" Foreground="White" VerticalAlignment="Center"/>
                            <Grid Grid.Column="1">
                                <Border Height="30" Background="#FFA500" CornerRadius="3" Margin="5,0" HorizontalAlignment="Stretch"/>
                            </Grid>
                            <TextBlock Grid.Column="2" Text="3,695 evt/s" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>

                        <!-- High Concurrency - Display as metric -->
                        <Grid Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="High Concurrency" Foreground="#32CD32" VerticalAlignment="Center" FontWeight="Bold"/>
                            <TextBlock Grid.Column="1" Text="2,217,516 evt/s (queuing speed)" Foreground="#32CD32" VerticalAlignment="Center" FontSize="16" FontWeight="Bold"/>
                        </Grid>

                        <TextBlock Text="💡 Sequential outperforms Parallel due to task creation overhead"
                                   Foreground="#FFD700" FontSize="11" FontStyle="Italic"
                                   TextWrapping="Wrap" Margin="0,20,0,0"/>
                        <TextBlock Text="⚠️ High Concurrency measures queuing, not processing (real capacity: ~3,700 evt/s)"
                                   Foreground="#FF6B6B" FontSize="11" FontStyle="Italic"
                                   TextWrapping="Wrap" Margin="0,5,0,0"/>
                    </StackPanel>
                </Border>

                <!-- Row 2: Latency & Processing -->
                <Grid Grid.Row="1" Margin="0,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Latency -->
                    <Border Grid.Column="0" Style="{StaticResource ChartContainerStyle}">
                        <StackPanel>
                            <TextBlock Text="⚡ Latency Comparison" Style="{StaticResource SubtitleStyle}"/>
                            <TextBlock Text="Milliseconds per event (lower is better)"
                                       Foreground="#AAAAAA" FontSize="12" Margin="0,0,0,20"/>

                            <!-- Single Event -->
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Single Event" Foreground="White" VerticalAlignment="Center"/>
                                <Border Grid.Column="1" Height="25" Background="#3CB371" CornerRadius="3" Margin="5,0" Width="30" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Column="2" Text="0.15 ms" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            </Grid>

                            <!-- Request-Response -->
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Request-Response" Foreground="White" VerticalAlignment="Center"/>
                                <Border Grid.Column="1" Height="25" Background="#FFD700" CornerRadius="3" Margin="5,0" Width="240" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Column="2" Text="1.20 ms" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            </Grid>

                            <!-- Through Orchestrator -->
                            <Grid Margin="0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="80"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="Through Orchestrator" Foreground="White" VerticalAlignment="Center"/>
                                <Border Grid.Column="1" Height="25" Background="#FF7F50" CornerRadius="3" Margin="5,0"/>
                                <TextBlock Grid.Column="2" Text="5.40 ms" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            </Grid>

                            <TextBlock Text="✅ Direct machine access = lowest latency (0.15ms)"
                                       Foreground="#90EE90" FontSize="11" FontStyle="Italic"
                                       TextWrapping="Wrap" Margin="0,20,0,0"/>
                        </StackPanel>
                    </Border>

                    <!-- Processing Capacity -->
                    <Border Grid.Column="1" Style="{StaticResource ChartContainerStyle}">
                        <StackPanel>
                            <TextBlock Text="💪 Processing Capacity" Style="{StaticResource SubtitleStyle}"/>
                            <TextBlock Text="Real-world throughput limits"
                                       Foreground="#AAAAAA" FontSize="12" Margin="0,0,0,20"/>

                            <!-- Per Machine -->
                            <StackPanel Margin="0,10">
                                <TextBlock Text="Per Machine: 185 evt/s" Foreground="White" FontSize="14" FontWeight="SemiBold"/>
                                <ProgressBar Value="5" Maximum="100" Height="30" Margin="0,5,0,0"
                                             Foreground="#4682B4" Background="#333333"/>
                            </StackPanel>

                            <!-- 20 Machines -->
                            <StackPanel Margin="0,20">
                                <TextBlock Text="20 Machines Total: 3,700 evt/s" Foreground="White" FontSize="14" FontWeight="SemiBold"/>
                                <ProgressBar Value="100" Maximum="100" Height="30" Margin="0,5,0,0"
                                             Foreground="#9370DB" Background="#333333"/>
                            </StackPanel>

                            <StackPanel Margin="0,20,0,0">
                                <TextBlock Text="⚠️ Queue fills in: 36ms at max rate"
                                           Foreground="#FF6B6B" FontSize="11" TextWrapping="Wrap"/>
                                <TextBlock Text="✅ Sustainable: ~3,700 evt/s"
                                           Foreground="#90EE90" FontSize="11" TextWrapping="Wrap" Margin="0,5,0,0"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </Grid>

                <!-- Row 3: Key Insights -->
                <Border Grid.Row="2" Style="{StaticResource ChartContainerStyle}">
                    <StackPanel>
                        <TextBlock Text="💡 Key Insights &amp; Analysis" Style="{StaticResource SubtitleStyle}"/>

                        <Grid Margin="0,10,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Margin="0,0,20,0">
                                <TextBlock Text="Performance Observations:"
                                           Foreground="#00D9FF" FontSize="14" FontWeight="SemiBold" Margin="0,0,0,10"/>
                                <TextBlock Foreground="White" FontSize="12" TextWrapping="Wrap" LineHeight="20">
                                    <Run Text="• Sequential faster than Parallel for fast operations"/>
                                    <LineBreak/>
                                    <Run Text="  (Task overhead &gt; 1ms channel write)"/>
                                    <LineBreak/><LineBreak/>
                                    <Run Text="• High Concurrency = queuing speed, NOT processing"/>
                                    <LineBreak/>
                                    <Run Text="  (2.2M evt/s queuing vs 3.7K evt/s processing)"/>
                                    <LineBreak/><LineBreak/>
                                    <Run Text="• Direct access = 36x lower latency"/>
                                    <LineBreak/>
                                    <Run Text="  (0.15ms vs 5.4ms through orchestrator)"/>
                                </TextBlock>
                            </StackPanel>

                            <StackPanel Grid.Column="1">
                                <TextBlock Text="Recommendations:"
                                           Foreground="#FFD700" FontSize="14" FontWeight="SemiBold" Margin="0,0,0,10"/>
                                <TextBlock Foreground="White" FontSize="12" TextWrapping="Wrap" LineHeight="20">
                                    <Run Text="✅ Use Sequential for &lt; 1ms operations"/>
                                    <LineBreak/><LineBreak/>
                                    <Run Text="✅ Real bottleneck = state machine processing"/>
                                    <LineBreak/>
                                    <Run Text="   (not orchestrator throughput)"/>
                                    <LineBreak/><LineBreak/>
                                    <Run Text="✅ For low latency: direct machine access"/>
                                    <LineBreak/><LineBreak/>
                                    <Run Text="✅ High Concurrency good for burst handling"/>
                                    <LineBreak/>
                                    <Run Text="   (but watch queue saturation)"/>
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </ScrollViewer>

        <!-- Status Bar -->
        <Border Grid.Row="2" Background="#252526" Padding="15,10">
            <Grid>
                <TextBlock x:Name="StatusText" Text="Ready" Foreground="White" VerticalAlignment="Center"/>
                <StackPanel x:Name="ProgressPanel" Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Visibility="Collapsed">
                    <TextBlock Text="Running..." Foreground="#FFD700" Margin="0,0,10,0"/>
                    <ProgressBar IsIndeterminate="True" Width="100" Height="4"
                                 VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>